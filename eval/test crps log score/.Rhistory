setwd("C:/Users/Philipp/Documents/GitHub/sparse-nowcasting/eval")
dens <- read.csv('dens.csv', header = FALSE)
truegdp <- 1.3126
library(scoringRules)
crps_sample(y = truegdp, dat = as.matrix(dens))
logs_sample(y = truegdp, dat = as.matrix(dens))
setwd("C:/Users/Philipp/Documents/GitHub/sparse-nowcasting/eval/test crps log score")
dens <- read.csv('dens.csv', header = FALSE)
truegdp <- 1.3126
library(scoringRules)
crps_sample(y = truegdp, dat = as.matrix(dens))
logs_sample(y = truegdp, dat = as.matrix(dens))
?logs_sample
logs_sample(y = truegdp, dat = as.vector(dens))
as.vector(dens)
logs_sample(y = truegdp, dat = as.vector(dens))
as.matrix(dens)
dim(as.matrix(dens))
setwd("C:/Users/Philipp/Documents/GitHub/sparse-nowcasting/eval/test crps log score")
dens <- read.csv('dens.csv', header = FALSE)
View(dens)
setwd("C:/Users/Philipp/Documents/GitHub/sparse-nowcasting/eval/test crps log score")
dens <- read.csv('data_test_crps_logS.csv', header = FALSE)
truegdp <- dat[1]
dens <- dat[2:length(dat)]
dat <- read.csv('data_test_crps_logS.csv', header = FALSE)
truegdp <- dat[1]
dens <- dat[2:length(dat)]
View(truegdp)
View(dens)
truegdp <- dat[1, KEEP=F]
truegdp <- dat[1, 1]
dens <- dat[1, 2:length(dat)]
dens
class(dens)
setwd("C:/Users/Philipp/Documents/GitHub/sparse-nowcasting/eval/test crps log score")
dat <- read.csv('data_test_crps_logS.csv', header = FALSE)
truegdp <- dat[1, 1]
dens <- dat[1, 2:length(dat)]
library(scoringRules)
crps_sample(y = truegdp, dat = as.matrix(dens))
logs_sample(y = truegdp, dat = as.matrix(dens))
